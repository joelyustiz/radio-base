{"version":3,"sources":["custom-input.js","custom-button.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["CustomInput","props","id","disabled","value","type","autoComplete","placeholder","className","min","max","onChange","onClick","onFocus","onBlur","onKeyPress","isVisible","required","setRef","content","ref","isNil","isEmpty","event","target","CustomButton","url","active","block","color","outline","innerRef","size","classIcon","label","buttonSize","iconPosition","isBoolean","isFunction","isString","href","download","App","useState","data","setData","inputValueSearch","setInputValueSearch","columns","React","useMemo","Header","accessor","Cell","row","valor","original","trafico","useTable","initialState","pageIndex","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","getTable","a","fetch","response","console","log","json","method","body","JSON","stringify","headers","useEffect","e","getTableFilter","length","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","defaultValue","Number","style","width","key","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.19cc6bde.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport isNil from \"lodash/isNil\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\n\r\nfunction CustomInput(props) {\r\n  const {\r\n    id,\r\n    disabled,\r\n    value,\r\n    type,\r\n    autoComplete,\r\n    placeholder,\r\n    className,\r\n    min,\r\n    max,\r\n    //toBlock,\r\n    onChange,\r\n    onClick,\r\n    onFocus,\r\n    onBlur,\r\n    onKeyPress,\r\n    isVisible,\r\n    required,\r\n    setRef\r\n  } = props;\r\n  let content = <div />;\r\n\r\n  if (isVisible === true) {\r\n    content = (\r\n      <input\r\n        ref={setRef}\r\n        id={isNil(id) ? \"input\" : id}\r\n        value={isNil(value) === false ? value : \"\"}\r\n        disabled={isNil(disabled) ? false : disabled}\r\n        required={isNil(required) ? false : required}\r\n        type={isNil(type) === false && isEmpty(type) === false ? type : \"text\"}\r\n        placeholder={\r\n          isNil(placeholder) === false && isEmpty(placeholder) === false\r\n            ? placeholder\r\n            : \"\"\r\n        }\r\n        autoComplete={\r\n          isNil(autoComplete) === false && isEmpty(autoComplete) === false\r\n            ? \"on\"\r\n            : \"off\"\r\n        }\r\n        className={\r\n          isNil(className) && isEmpty(className) ? \"form-control\" : className\r\n        }\r\n        min={isEmpty(min) === false && isNil(min) === false ? min : \"\"}\r\n        max={isEmpty(max) === false && isNil(max) === false ? max : \"\"}\r\n        onChange={event => {\r\n          if (typeof onChange === \"function\") {\r\n            return onChange(event, event.target.value);\r\n          }\r\n        }}\r\n        onClick={event => {\r\n          if (typeof onClick === \"function\") {\r\n            return onClick(event, event.target.value);\r\n          }\r\n        }}\r\n        onFocus={event => {\r\n          if (typeof onFocus === \"function\") {\r\n            return onFocus(event, event.target.value);\r\n          }\r\n        }}\r\n        onBlur={event => {\r\n          if (typeof onBlur === \"function\") {\r\n            return onBlur(event, event.target.value);\r\n          }\r\n        }}\r\n        onKeyPress={event => {\r\n          //event.which == 13 || event.keyCode == 13\r\n          if (typeof onKeyPress === \"function\") {\r\n            return onKeyPress(event, event.target.value);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return content;\r\n}\r\n\r\nexport default CustomInput;","import React from \"react\";\r\n\r\nimport isNil from \"lodash/isNil\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport isBoolean from \"lodash/isBoolean\";\r\nimport isFunction from \"lodash/isFunction\";\r\nimport isString from \"lodash/isString\";\r\n\r\nfunction CustomButton(props) {\r\n  const {\r\n    isVisible,\r\n    url,\r\n    active,\r\n    block,\r\n    color,\r\n    disabled,\r\n    outline,\r\n    innerRef,\r\n    onClick,\r\n    size,\r\n    className,\r\n    classIcon,\r\n    label,\r\n    buttonSize,\r\n    type,\r\n    iconPosition\r\n  } = props;\r\n  let content = <div />;\r\n\r\n  if (isVisible === true) {\r\n    content =\r\n      isNil(url) || isEmpty(url) ? (\r\n        <button\r\n          type={isNil(type) ? \"button\" : type}\r\n          disabled={isBoolean(disabled) ? disabled : false}\r\n          onClick={() => {\r\n            if (isFunction(onClick)) {\r\n              return onClick();\r\n            }\r\n          }}\r\n          className={\r\n            isNil(className) === false && isString(className)\r\n              ? `btn ${className} ${isNil(buttonSize) ? \"\" : buttonSize}`\r\n              : `btn btn-default ${isNil(buttonSize) ? \"\" : buttonSize}`\r\n          }\r\n        >\r\n          {isNil(classIcon) === false &&\r\n          isString(classIcon) &&\r\n          iconPosition === \"left\" ? (\r\n            <i className={classIcon} />\r\n          ) : null}\r\n\r\n          {isNil(label) === false && isString(label) ? label : \"\"}\r\n\r\n          {isNil(classIcon) === false &&\r\n          isString(classIcon) &&\r\n          iconPosition === \"right\" ? (\r\n            <i className={classIcon} />\r\n          ) : null}\r\n        </button>\r\n      ) : (\r\n        <a\r\n          href={isNil(url) === false ? url : \"https://\"}\r\n          download\r\n          disabled={isBoolean(disabled) ? disabled : false}\r\n          onClick={() => {\r\n            if (isFunction(onClick)) {\r\n              return onClick();\r\n            }\r\n          }}\r\n          className={\r\n            isNil(className) === false && isString(className)\r\n              ? `btn ${className} ${isNil(buttonSize) ? \"\" : buttonSize}`\r\n              : `btn btn-default ${isNil(buttonSize) ? \"\" : buttonSize}`\r\n          }\r\n        >\r\n          {isNil(classIcon) === false && isString(classIcon) ? (\r\n            <i className={classIcon} />\r\n          ) : null}\r\n          {isNil(label) === false && isString(label) ? label : \"\"}\r\n        </a>\r\n      );\r\n  }\r\n  return content;\r\n}\r\n\r\nexport default CustomButton;","import React, { useEffect, Fragment, useState } from 'react';\nimport logo from './logo.svg';\nimport {\n  useTable,\n  useGroupBy,\n  useFilters,\n  useSortBy,\n  useExpanded,\n  usePagination,\n} from 'react-table'\nimport './App.css';\nimport io from 'socket.io-client';\nimport CustomInput from \"./custom-input\"\nimport CustomButton from \"./custom-button\"\n\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [inputValueSearch, setInputValueSearch] = useState(\"\")\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Radio base\",\n        accessor: \"radiobase\"\n      },\n      {\n        Header: \"Fecha\",\n        accessor: \"fecha\"\n      },\n      {\n        Header: \"Región\",\n        accessor: \"region\"\n      },\n      {\n        Header: \"Trafico\",\n        accessor: \"\",\n        Cell: row => {\n          let valor = \"\"\n          if (row.row.original.trafico <= 15) {\n            valor = \"text-danger\"\n          }\n          if (row.row.original.trafico > 15 && row.row.original.trafico <= 40) {\n            valor = \"text-warning\"\n          }\n          if (row.row.original.trafico > 40 && row.row.original.trafico <= 90) {\n            valor = \"text-warning\"\n          }\n          if (row.row.original.trafico > 90) {\n            valor = \"text-success\"\n          }\n          if (row.row.original.trafico === null) {\n            valor = \"text-secondary\"\n          }\n          return <div className={valor}>{row.row.original.trafico}</div>;\n        }\n      }\n    ],\n    []\n  );\n\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 2 },\n    },\n    usePagination\n  )\n\n\n  const getTable = async () => {\n    try {\n\n      const response = await fetch(\"/api/data\");\n      console.log(response)\n      const data = await response.json()\n      setData(data.data);\n      console.log(data)\n\n    } catch (error) {\n      console.log(\"error\", error);\n\n    }\n\n  }\n\n  useEffect(() => {\n    getTable()\n\n  }, [])\n\n\n\n  let component = <div></div>;\n\n  async function getTableFilter() {\n    try {\n      let response = []\n      if (inputValueSearch == \"\") {\n         response = await fetch(\"/api/data\");\n      } else {\n        response = await fetch(\"/api/data/buscar\", {\n          method: 'POST', // or 'PUT'\n          body: JSON.stringify({ value: inputValueSearch }), // data can be `string` or {object}!\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        } );\n      }\n       \n      console.log(response)\n      const data = await response.json()\n      setData(data.data);\n      console.log(data)\n\n    } catch (error) {\n      console.log(\"error\", error);\n\n    }\n  }\n\n  // Render the UI for your table\n\n  component = (\n    <Fragment>\n      <CustomInput\n        disabled={false}\n        isVisible\n        value={inputValueSearch}\n        placeholder=\"Ingrese referencia\"\n        onChange={(e, value) => setInputValueSearch(value)}\n      />\n      <CustomButton\n        label=\"Buscar por trafico\"\n        isVisible\n        className=\"btn-warning\"\n        onClick={() => {\n          getTableFilter()\n        }}\n      />\n      <div className=\"table-registros\">\n        {data.length > 0 ? (\n          <Fragment>\n            <table className=\"table table-striped table-responsive\" {...getTableProps()}>\n              <thead>\n                {headerGroups.map(headerGroup => (\n                  <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                      <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                    ))}\n                  </tr>\n                ))}\n              </thead>\n              <tbody {...getTableBodyProps()}>\n                {page.map(\n                  (row, i) => {\n                    prepareRow(row);\n                    return (\n                      <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                          return (\n                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                          )\n                        })}\n                      </tr>\n                    )\n                  }\n                )}\n              </tbody>\n            </table>\n            {/* \n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n            <div className=\"pagination\">\n              <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n              </button>{' '}\n              <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n              </button>{' '}\n              <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n              </button>{' '}\n              <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n              </button>{' '}\n              <span>\n                Page{' '}\n                <strong>\n                  {pageIndex + 1} of {pageOptions.length}\n                </strong>{' '}\n              </span>\n              <span>\n                | Go to page:{' '}\n                <input\n                  type=\"number\"\n                  defaultValue={pageIndex + 1}\n                  onChange={e => {\n                    const page = e.target.value ? Number(e.target.value) - 1 : 0\n                    gotoPage(page)\n                  }}\n                  style={{ width: '100px' }}\n                />\n              </span>{' '}\n              <select\n                value={pageSize}\n                onChange={e => {\n                  setPageSize(Number(e.target.value))\n                }}\n              >\n                {[10, 20, 30, 40, 50].map(pageSize => (\n                  <option key={pageSize} value={pageSize}>\n                    Show {pageSize}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </Fragment>\n        ) : (\n            <div className=\"alert alert-info\">\n              Falta que los registros se asignen a servidores\n            </div>\n          )}\n      </div>\n    </Fragment>\n  );\n\n  return component\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}